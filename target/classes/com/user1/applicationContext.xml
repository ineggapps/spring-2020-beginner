<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
	<!-- 객체 생성 명세를 정의한다. -->
	<!-- bean: 객체 하나의 생성을 명세, id:고유 식별자, class: 만들고자 하는 클래스의 위치(패키지명 포함) -->
	<bean id="userService" class="com.user1.UserServiceImpl" />
	<!-- userService의 경우에는 기본생성자가 존재하므로 생성자의 인잣값을 별도로 명시하지 않아도 생성이 가능하다. -->
	<!-- init-method (생성자 다음에 실행되는 메서드 명시), destroy-method (해당 객체가 소멸되기 직전에 호출된다) -->
	<!-- destroy는 context를 close할 때 (App.java) 실행된다. -->
	<bean id="userBean" class="com.user1.UserBean" init-method="init" destroy-method="destroy">
		<!-- 생성자를 이용한 의존 관계 설정 -->
		<!-- 기본생성자가 없는 경우에는 반드시 다음과 같이 constructor-arg 태그를 명시해 주어야 한다.-->
		<!-- 명명규칙: 첫글자는 소문자로 시작하는 camelcase, but 나중에는 패키지명까지 명시하여 중복을 피해야 한다.  -->
		<constructor-arg ref="userService" />
		<!-- userService는 기본자료형이 아니라 객체(reference type)이므로 ref속성으로 객체의 식별자를 명시한다. 
		바로 이러한 경우를 의존관계가 있다고 이야기할 수 있는데 생성자로 자료형을 삽입해 주는 것을 "의존 관계 설정"이라고 한다. -->
		<!-- 생성자가 없으면 No default constructor found 예외가 발생한다. -->
	</bean>
</beans>  